
**********************************************************************
Upgrade to ikaaro 0.62.0
System Administrators
**********************************************************************

Configuration File
====================

TODO


Scripts
====================

TODO


Update the database
====================

As usual instances must be updated following the standard procedure:

  1. Make a backup

  2. Update the database:

     $ icms-update.py xxx

  3. Rebuild the catalog:

     $ icms-update-catalog.py xxx


**********************************************************************
Upgrade to ikaaro 0.62.0
Developers
**********************************************************************

Note that the documentation below is not complete.  For any specific
problem, please ask the mailing list.

Imports
====================

Some things have changed names, or moved somewhere else.  The table below
summarizes these changes:

  Before                                 Now
  -------------------------------------  --------------------------------------
  ikaaro.forms.XXX                       ikaaro.autoform.XXX
  ikaaro.registry.register_field         itools.database.register_field


Autoform
=====================

The widgets have been rationalized.  The table below shows which widget to
use now instead of the old one:

  datatype                    Widget (Before)           Widget (Now)
  -------------------------   -----------------------   ---------------------
  Boolean                     BooleanCheckBox           CheckboxWidget
  Boolean                     BooleanRadio              RadioWidget
  ?                           CheckBoxWidget            CheckboxWidget
  Enumerate(multiple=False)   SelectRadio               RadioWidget
  Enumerate(multiple=True)    SelectRadio               CheckboxWidget


Resources
=====================

The definition of the metadata and the definition of the fields to be
indexed or stored by the catalog have been merged.

You don't need to register the fields in the catalog anymore, this is
done automatically in the new version.

Now multilingual fields are explicitely defined as such.

  # Before
  class MyResource(BaseClass):
      @classmethod
      def get_metadata_schema(cls):
          schema = BaseClass.get_metadata_schema()
          schema['my_title'] = Unicode
          return schema

  register_field('my_title', Unicode(is_stored=True, is_indexed=True))
  register_field('foobar', Integer(is_indexed=True))

  # Now
  class MyResource(BaseClass):
      class_schema = merge_dicts(
          BaseClass.class_schema,
          my_title=Unicode(source='metadata', multilingual=True,
                           indexed=True, stored=True),
          foobar=Integer(indexed=True))
